# handlers/lab/status.py

import re
from datetime import datetime, timezone

from aiogram import Router, types, F
from aiogram.filters import Command
from services.lab_service import (
    get_player_cached,
    get_lab_cached,
    get_skill_cached,
    get_stats_cached,
    process_pathogens,
    register_player_if_needed,
)
from utils.formatting import short_number

from keyboards.lab_kb import lab_keyboard

router = Router()

@router.message(
    # –ª–æ–≤–∏–º "–±–∏–æ–ª–∞–±", "–±–ª" –∏–ª–∏ "–ª–∞–±" —Å –ª—é–±—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º (/ . –∏–ª–∏ –±–µ–∑)
    F.text.regexp(r'^[/.]?(?:–±–∏–æ–ª–∞–±|–±–ª|–ª–∞–±)$', flags=re.IGNORECASE)
)
async def cmd_lab_status(message: types.Message):
    user_id = message.from_user.id

    # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
    player = await register_player_if_needed(
        user_id,
        message.from_user.full_name,
    )

    # 2) –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é + —Å–≤—è–∑–∏
    lab = await get_lab_cached(player)
    stats = await get_stats_cached(lab)
    skills = await get_skill_cached(lab)

    # update pathogen production based on current time
    await process_pathogens(lab, skills)

    # 3) –ò–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞, –∑–∞–¥–∞–Ω–Ω–æ–µ –∏–≥—Ä–æ–∫–æ–º
    pathogen_name = lab.pathogen_name

    # 4) –î–∞–Ω–Ω—ã–µ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏
    if lab.corporation:
        corp_name = lab.corporation.name
        corp_tg_id = lab.corporation.tg_id
        corp_line = (
            f"üè¢ –í —Å–æ—Å—Ç–∞–≤–µ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏: "
            f"¬´<a href=\"tg://openmessage?user_id={corp_tg_id}\">{corp_name}</a>¬ª\n\n"
        )
    else:
        corp_line = ""

    # 5) –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    blocks = "‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è" * max(1, lab.activity // 20)

    # 6) –î–æ –Ω–æ–≤–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞
    if lab.next_pathogen_at:
        delta = lab.next_pathogen_at - datetime.now(timezone.utc)
        mins = max(0, int(delta.total_seconds() // 60))
    else:
        mins = 0

    # 7) –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    if stats.operations_total > 0:
        ops_pct       = f"{stats.operations_done / stats.operations_total:.0%}"
        blocked_pct   = f"{stats.operations_blocked / stats.operations_total:.0%}"
    else:
        ops_pct = "0%"
        blocked_pct = "0%"

    # 8) HTML‚Äë—Ç–µ–∫—Å—Ç
    text = (
        f"<b>üî¨ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –∏–≥—Ä–æ–∫–∞:</b> "
        f"<a href=\"tg://openmessage?user_id={user_id}\">{message.from_user.full_name}</a>\n"
        f"{corp_line}\n"

        f"<b>ü™´ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: [{blocks}] {lab.activity}%</b>\n"
        f"<blockquote>–ü—Ä–µ–º–∏—è +{lab.premium_bonus}% üß¨</blockquote>\n" 
        # –ú–∞–π–Ω–∏–Ω–≥ +{lab.mining_bonus}% üíé | 
        f"üè∑ –ò–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ ‚Äî <code>{pathogen_name or 'None'}</code>;\n"
        f"üß™ –°–≤–æ–±–æ–¥–Ω—ã—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤: {short_number(lab.free_pathogens)} "
        f"–∏–∑ {short_number(lab.max_pathogens)}\n\n"
        # f"(<code>+{short_number(lab.max_pathogens - lab.free_pathogens)}</code>)\n\n"

        f"<b>üåé –ù–∞–≤—ã–∫–∏:</b>\n"
        f"<blockquote>ü¶† –ó–∞—Ä–∞–∑–Ω–æ—Å—Ç—å: {skills.infectivity} —É—Ä.\n"
        f"üõ° –ò–º–º—É–Ω–∏—Ç–µ—Ç: {skills.immunity} —É—Ä.\n"
        f"‚ò†Ô∏è –õ–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å: {skills.lethality} —É—Ä.\n"
        f"üïµüèª‚Äç‚ôÇÔ∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {skills.safety} —É—Ä.\n"
        f"üë©üèª‚Äçüî¨ –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {skills.qualification} —É—Ä.\n"
        f"‚è±Ô∏è –î–æ –Ω–æ–≤–æ–≥–æ –ø–∞—Ç–æ–≥–µ–Ω–∞: {mins} –º–∏–Ω.</blockquote>\n\n"

        f"<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"<blockquote>‚ò¢Ô∏è –ë–∏–æ‚Äë–æ–ø—ã—Ç: {short_number(stats.bio_experience)}\n"
        f"üß¨ –ë–∏–æ‚Äë—Ä–µ—Å—É—Ä—Å: {short_number(stats.bio_resource)}\n"
        f"üò∑ –°–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏–π: {short_number(stats.operations_done)}/{short_number(stats.operations_total)} ({ops_pct})\n"
        f"ü•Ω –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω—ã: {short_number(stats.operations_blocked)}/{short_number(stats.operations_total)} ({blocked_pct})</blockquote>\n\n"

        f"<b>ü§í –ó–∞—Ä–∞–∂—ë–Ω–Ω—ã—Ö: {short_number(stats.infected_count)}\n"
        f"üò® –°–≤–æ–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π: {short_number(stats.own_diseases)}</b>"
    )

    await message.answer(text, reply_markup=lab_keyboard(user_id))
