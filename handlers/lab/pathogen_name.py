from aiogram import Router, types, F
import re

from utils.validation import contains_link_or_mention
from tortoise.exceptions import DoesNotExist
from services.lab_service import get_player_cached, get_lab_cached
from models.laboratory import Laboratory

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–º–µ–Ω–∏ –ø–∞—Ç–æ–≥–µ–Ω–∞
@router.message(F.text.regexp(r'^-–∏–º—è\s+–ø–∞—Ç–æ–≥–µ–Ω–∞$', flags=re.IGNORECASE))
async def clear_pathogen_name(message: types.Message):
    try:
        player = await get_player_cached(message.from_user.id)
    except DoesNotExist:
        return await message.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.")

    lab = await get_lab_cached(player)
    lab.pathogen_name = None
    await lab.save()

    await message.answer("‚ùé –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞ –∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω–æ")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø–∞—Ç–æ–≥–µ–Ω–∞
@router.message(F.text.regexp(r'^\.–∏–º—è\s+–ø–∞—Ç–æ–≥–µ–Ω–∞\s+.+', flags=re.IGNORECASE))
async def set_pathogen_name(message: types.Message):
    match = re.match(r'^\.–∏–º—è\s+–ø–∞—Ç–æ–≥–µ–Ω–∞\s+(.+)$', message.text, flags=re.IGNORECASE)
    if not match:
        return

    name = match.group(1).strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
    if len(name) > 20:
        return await message.answer("‚ùå –ò–º—è –ø–∞—Ç–æ–≥–µ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤.")

    # –ó–∞–ø—Ä–µ—â–∞–µ–º —Å—Å—ã–ª–∫–∏ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if contains_link_or_mention(name):
        return await message.answer("üìã –°—Å—ã–ª–∫–∏ –≤ –∏–º–µ–Ω–∏ –ø–∞—Ç–æ–≥–µ–Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω—ã.")

    try:
        player = await get_player_cached(message.from_user.id)
    except DoesNotExist:
        return await message.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–∞ –≤ –±–∞–∑–µ
    exists = await Laboratory.filter(pathogen_name__iexact=name).exists()
    if exists:
        return await message.answer(
            "üìù –¢–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n\n"
            "üí¨ –ù–æ –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ –í–∞—à–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –∏–º–µ—Ç—å –±–æ–ª—å—à–µ –±–∏–æ-–æ–ø—ã—Ç–∞ –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑."
        )

    lab = await get_lab_cached(player)
    lab.pathogen_name = name
    await lab.save()

    await message.answer(
        f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ç–æ–≥–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ ¬´{name}¬ª",
        parse_mode="HTML"
    )
